// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonReviewApp.Data;

#nullable disable

namespace PokemonReviewApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250422111100_FixTablesTest")]
    partial class FixTablesTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OwnerPokemon", b =>
                {
                    b.Property<Guid>("OwnersOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PokemonsPokemonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OwnersOwnerId", "PokemonsPokemonId");

                    b.HasIndex("PokemonsPokemonId");

                    b.ToTable("OwnerPokemon");
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Owner", b =>
                {
                    b.Property<Guid>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GYM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OwnerId");

                    b.HasIndex("OwnerName");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Pokemon", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PokemonId");

                    b.HasIndex("PokemonName");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ReviewId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("ReviewerId");

                    b.HasIndex("Title");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Reviewer", b =>
                {
                    b.Property<Guid>("ReviewerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewerId");

                    b.HasIndex("FirstName");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("OwnerPokemon", b =>
                {
                    b.HasOne("PokemonReviewApp.Data.Model.Owner", null)
                        .WithMany()
                        .HasForeignKey("OwnersOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonReviewApp.Data.Model.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsPokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Review", b =>
                {
                    b.HasOne("PokemonReviewApp.Data.Model.Pokemon", "pokemon")
                        .WithMany("Reviews")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonReviewApp.Data.Model.Reviewer", "reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pokemon");

                    b.Navigation("reviewer");
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Pokemon", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("PokemonReviewApp.Data.Model.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
